// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/manufacturers": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves a list of manufacturers from the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "manufacturers"
                ],
                "summary": "List manufacturers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of manufacturers",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.Manufacturer"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/productdelete": {
            "post": {
                "security": [
                    {
                        "X-API-Key": []
                    }
                ],
                "description": "Deletes a product from the database based on its SKU",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Delete a product",
                "parameters": [
                    {
                        "description": "SKU of the product to delete",
                        "name": "sku",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/productinsert": {
            "post": {
                "security": [
                    {
                        "X-API-Key": []
                    }
                ],
                "description": "Adds a new product to the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Insert new product",
                "parameters": [
                    {
                        "description": "Product to add",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.Product"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/products": {
            "get": {
                "security": [
                    {
                        "X-API-Key": []
                    }
                ],
                "description": "Retrieves a list of products, with optional filtering parameters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "List products",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by internal SKU",
                        "name": "sku_internal",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by manufacturer code",
                        "name": "manufacturer_code",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by manufacturer SKU",
                        "name": "sku_manufacturer",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by processing request",
                        "name": "processing_request",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by sorting request",
                        "name": "sorting_request",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by unit",
                        "name": "unit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by unit price",
                        "name": "unit_price",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by currency",
                        "name": "Currency",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by order quantity",
                        "name": "order_qty",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by reorder status",
                        "name": "reorder",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by season",
                        "name": "season",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit number of results",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of products",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.Product"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/productupdate": {
            "post": {
                "security": [
                    {
                        "X-API-Key": []
                    }
                ],
                "description": "Updates fields of a product in the database with the given SKU; only provided fields are updated",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Update an existing product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "SKU of the product",
                        "name": "sku",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Manufacturer Part of the product",
                        "name": "manufacturer_part",
                        "in": "body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Description of the product",
                        "name": "description",
                        "in": "body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Manufacturer of the product",
                        "name": "manufacturer",
                        "in": "body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Processing request of the product",
                        "name": "process_request",
                        "in": "body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Unit of the product",
                        "name": "unit",
                        "in": "body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Unit Price of the product",
                        "name": "unit_price",
                        "in": "body",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "description": "Order Quantity of the product",
                        "name": "order_qty",
                        "in": "body",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Season of the product",
                        "name": "season",
                        "in": "body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Inventory Quantity of the product",
                        "name": "inventory_qty",
                        "in": "body",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Currency of the product",
                        "name": "currency",
                        "in": "body",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product successfully updated",
                        "schema": {
                            "$ref": "#/definitions/main.ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request: SKU is required",
                        "schema": {
                            "$ref": "#/definitions/main.ApiResponse"
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "schema": {
                            "$ref": "#/definitions/main.ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/main.ApiResponse"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "Get a list of users with optional role filtering",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "List users",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter users by role (sorting/manager)",
                        "name": "role",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of users",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/main.User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "main.ApiResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "main.Image": {
            "type": "object",
            "properties": {
                "url_standard": {
                    "type": "string"
                },
                "url_thumbnail": {
                    "type": "string"
                },
                "url_tiny": {
                    "type": "string"
                }
            }
        },
        "main.Manufacturer": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "main.Permissions": {
            "type": "object",
            "properties": {
                "admin": {
                    "type": "boolean"
                },
                "mgmt": {
                    "type": "boolean"
                },
                "receiving": {
                    "type": "boolean"
                },
                "sorting": {
                    "type": "boolean"
                }
            }
        },
        "main.Product": {
            "type": "object",
            "properties": {
                "currency": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "image": {
                    "$ref": "#/definitions/main.Image"
                },
                "inventoryQty": {
                    "type": "integer"
                },
                "manufacturer": {
                    "type": "string"
                },
                "manufacturerPart": {
                    "type": "string"
                },
                "modified": {
                    "type": "string"
                },
                "orderQty": {
                    "type": "integer"
                },
                "processRequest": {
                    "type": "string"
                },
                "reorder": {
                    "type": "boolean"
                },
                "season": {
                    "type": "string"
                },
                "sku": {
                    "type": "string"
                },
                "sortingRequest": {
                    "type": "string"
                },
                "unit": {
                    "type": "string"
                },
                "unitPrice": {
                    "type": "number"
                }
            }
        },
        "main.User": {
            "type": "object",
            "properties": {
                "management": {
                    "type": "boolean"
                },
                "manager": {
                    "type": "string"
                },
                "permissions": {
                    "$ref": "#/definitions/main.Permissions"
                },
                "role": {
                    "type": "string"
                },
                "sorting": {
                    "type": "boolean"
                },
                "usercode": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "X-API-Key",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "127.0.0.1:8082",
	BasePath:         "/api/",
	Schemes:          []string{"http", "https"},
	Title:            "Purchasing System API",
	Description:      "Generic Description",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
